#+title: Fluent Python Notes
#+author: dragove

* Part I Data Structures
** Chapter 1 The Python Data Model
*** A Pythonic Card Deck
**** Example 1-1 A deck as a sequence of playing cards
#+begin_src python :session card :results silent
  import collections

  Card = collections.namedtuple('Card', ['rank', 'suit'])

  class FrechDeck:
      ranks = [str(n) for n in range(2, 11)] + list('JQKA')
      suits = 'spades diamonds clubs hearts'.split()

      def __init__(self):
          self._cards = [Card(rank, suit) for suit in self.suits
                         for rank in self.ranks]

      def __len__(self):
          return len(self._cards)

      def __getitem__(self, position):
          return self._cards[position]

  deck = FrechDeck()
  #+end_src

Testing cardï¼ŒNamed Tuple can be used to construct simple classes with no methods

#+begin_src python :session card :results value :exports both
  beer_card = Card('7', 'diamonds')
  beer_card
#+end_src

#+RESULTS:
: Card(rank='7', suit='diamonds')

#+begin_src python :session card :results value :exports both
  deck = FrechDeck()
  len(deck)
#+end_src

#+RESULTS:
: 52

#+begin_src python :session card :results value :exports both
  from random import choice
  choice(deck), deck[:2], deck[12::13]
#+end_src

#+RESULTS:
| Card | (rank= 10 suit= spades) | (Card (rank= 2 suit= spades) Card (rank= 3 suit= spades)) | (Card (rank= A suit= spades) Card (rank= A suit= diamonds) Card (rank= A suit= clubs) Card (rank= A suit= hearts)) |
